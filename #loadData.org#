* Initialize languages
#+source: configuration
#+begin_src emacs-lisp :results output
;; Doesn't work
 ;; first it is necessary to ensure that Org-mode loads support for the
  ;; languages used by code blocks in this article
  (org-babel-do-load-languages
   'org-babel-load-languages
   '(
     (ditaa      . t)     
     (dot        . t)
     (emacs-lisp . t)
     (haskell    . t)
     (org        . t)
     (perl       . t)
     (python     . t)
     (R          . t)
     (ruby       . t)
     (sh         . t)
     (sqlite     . t)))
  ;; then we'll remove the need to confirm evaluation of each code
  ;; block, NOTE: if you are concerned about execution of malicious code
  ;; through code blocks, then comment out the following line
  (setq org-confirm-babel-evaluate nil)
  ;; finally we'll customize the default behavior of Org-mode code blocks
  ;; so that they can be used to display examples of Org-mode syntax
  (setf org-babel-default-header-args:org '((:exports . "code")))
#+end_src

#+name: square
#+header: :var x=5
#+begin_src python
return x*x
#+end_src

#+RESULTS: square
: 25

* Manage R data frame
** demo1 
#+name: load_var
#+BEGIN_SRC R :file check_load.txt :results output :export both :session nyc
  library(foreign)
  df <- read.spss(file = "/home/evan/Documents/city_council/data20140702/City Council (ALL).sav",to.data.frame = TRUE)
  head(d)
#+END_SRC

#+RESULTS: load_var
[[file:check_load.txt]]

#+name: sub_out_first_vars
#+BEGIN_SRC R :file check_first_set.txt :results output :export both :session nyc
rawLabels <- colnames(df)

varNames <- c("DateCollected",
              "DateSent",                                         
              "iPad",                                              
#              "ScannedCoupon",
              "AgeQualified",
              "GeoQualified",
              "Consented",                          
              "HelpedNeighbor",    
              "Other1",                                             
              "HelpedByNeighbor")

varNames <- c(varNames,
              "Other2",
              "lastNeighborConflictTime",
              "Other3",
              "EverShotAt",
              "ShotAtCount",
              "EverStabbed",
              "StabbedCount",
              "NeighbSpokenWCount",
              "GunsSeenCount",
              "HeardPersonThreatenedWGunHereL12Count",
              "HeardGunshotsHereL12Count")

varDf <- data.frame(matrix(c(rawLabels[1:length(varNames)],varNames),byrow = F,ncol=2))
(varDf)
#write.table(varDf,file = "varCheck.csv",sep = ",")
#+END_SRC

#+RESULTS: sub_out_first_vars
[[file:check_first_set.txt]]
** Rscenarios
#+name: sub_out_sec_vars
#+BEGIN_SRC R :file check_second_set.txt :results output :export both :session nyc 
varNames <- c(varNames,
              "SQF12mo",
              "RClubStepIn",
              "RGirlsNewG",
              "RFightPartyNotHere",
              "RBumpSwingNotHere",
              "RJordans",
              "RFriendAttacked",
              "ROwedMoneyPlayed",
              "RexGirlPlayed")
varDf <- data.frame(matrix(c(rawLabels[1:length(varNames)],varNames),byrow = F,ncol=2))
#write.table(varDf,file = "varCheck.csv",sep = ",")


varNames <- c(varNames,
              "RSocialMedia",
              "RBasketball",
              "RGirlClaim",
              "RPublicDis",
              "RStolenJacketPublic",
              "RMoneyOwed",
              "RBetWelch",
              "RBodegaCheat",
              "RBrothersAttacker",
              "AgeAtDeath",
              "RKnowReffer")

varDf <- data.frame(matrix(c(rawLabels[1:length(varNames)],varNames),byrow = F,ncol=2))
#write.table(varDf,file = "varCheck.csv",sep = ",")
(varDf)
#+END_SRC

#+RESULTS: sub_out_sec_vars
[[file:check_second_set.txt]]
** Fscenarios
#+name: sub_out_scenario_vars
#+BEGIN_SRC R :file check_scenario_set.txt :results output :export both :session nyc 
  varNames <- c(varNames,
                "FexGirlPlayed",
                "FPublicDis",              
                "FBetWelch",
                "FFightPartyNotHere",
                "FBrothersAttacker",
                "FGirlClaim",
                "FGirlsNewG",
                "FBumpSwingNotHere",
                "FStolenJacketPublic",              
                "FBasketball")

  varDf <- data.frame(matrix(c(rawLabels[1:length(varNames)],varNames),byrow = F,ncol=2))
  # write.table(varDf,file = "varCheck.csv",sep = ",")

  varNames <- c(varNames,
                "FBodegaCheat",
                "FFriendAttacked",
                "FMoneyOwed",
                "FClubStepIn",
                "FJordans",
                "FSocialMedia",
                "FOwedMoneyPlayed")

  varDf <- data.frame(matrix(c(rawLabels[1:length(varNames)],varNames),byrow = F,ncol=2))
  #write.table(varDf,file = "varCheck.csv",sep = ",")
  (varDf)
#+END_SRC

#+RESULTS: sub_out_scenario_vars
[[file:check_scenario_set.txt]]

** civil trust
#+name: sub_out_safety_vars
#+BEGIN_SRC R :file check_safety_set.txt :results output :export both :session nyc 
                                          #Check Feels safe
  varNames <- c(varNames,
                "FAgeAtDeath",
                "countOnPolice",
                "countOnFire",
                "countOnAmbulance",
                "countOnLeaders",
                "countOnPrograms",
                "countOnTeachers",
                "GangCommon",
                "reportPolice",
                "RFeelSafeNight",
                "RFeelSafeDay",
                "FFeelSafeNight",
                "FFeelSafeDay",
                "SocialMediaUsed")
  varDf <- data.frame(matrix(c(rawLabels[1:length(varNames)],varNames),byrow = F,ncol=2))
  #write.table(varDf,file = "varCheck.csv",sep = ",")

  varNames <- c(varNames,
                "ThreatenedFacebook",
                "ThreatenedTwitter",
                "ThreatenedInstagram",                                   
                "ThreatenedSnapchat",                                   
                "ThreatenedYoutube",                                    
                "ThreatenedVine",                                       
                "ThreatenedOtherSmedia",                      
                "AttendAVrallyL12mo")

  varDf <- data.frame(matrix(c(rawLabels[1:length(varNames)],varNames),byrow = F,ncol=2))
  #write.table(varDf,file = "varCheck.csv",sep = ",")
  (varDf)
#+END_SRC

#+RESULTS: sub_out_safety_vars
[[file:check_safety_set.txt]]

** Program Recognition

#+name: sub_out_image_vars
#+BEGIN_SRC R :file check_images_set.txt :results output :export both :session nyc 

      imagesResp <- paste("Image",1:5,sep = "")
      imageCount <- paste("SeenImage",1:5,"count",sep = "")
      ## if(survey=="Harlem") {
      ##     persImgCt <- 6
      ## } else {
      ##     persImgCt <- 8
      ## }
      persImgCt <- 8
      personRespA <- paste("RknowsP",1:persImgCt,sep = "")
      personCommA <- paste("RcommP",1:persImgCt,"L12mo",sep = "")

      personRespH <- paste("RknowsP",1:persImgCt,sep = "")
      personCommH <- paste("RcommP",1:persImgCt,"L12mo",sep = "")

      imageM <- matrix(c(imagesResp,imageCount),byrow = F,ncol=2)
      imageM <-matrix(matrix(imageM,byrow = TRUE,nrow=2),ncol= 1)
      respMH <- matrix(c(personRespH,personCommH),byrow = F,ncol=2)
      respMH <- matrix(matrix(respMH,byrow = TRUE,nrow=2),ncol= 1)


      persImgCt <- 8
      personRespE <- paste("RknowsP",1:persImgCt,sep = "")
      personCommE <- paste("RcommP",1:persImgCt,"L12mo",sep = "")

      imageM <- matrix(c(imagesResp,imageCount),byrow = F,ncol=2)
      imageM <- matrix(matrix(imageM,byrow = TRUE,nrow=2),ncol= 1)
      respME <- matrix(c(personRespE,personCommE),byrow = F,ncol=2)
      respME <- matrix(matrix(respME,byrow = TRUE,nrow=2),ncol= 1)

    imageM <- matrix(c(imagesResp,imageCount),byrow = F,ncol=2)
    imageM <- matrix(matrix(imageM,byrow = TRUE,nrow=2),ncol= 1)
    respMA <- matrix(c(personRespA,personCommA),byrow = F,ncol=2)
    respMA <- matrix(matrix(respMA,byrow = TRUE,nrow=2),ncol= 1)
      


  #    varNamesH <- c(varNames,imageM,respMH)
  #    varNamesE <- c(varNames,imageM,respME)
      varNamesA <- c(varNames,imageM,respMA)
      #rawLabelsH <- colnames(df2)
      #rawLabelsE <- colnames(df1)

      ## varDfH <- data.frame(matrix(c(rawLabels[1:length(varNamesH)],varNamesH),byrow = F,ncol=2))
      ## write.table(varDf,file = "varCheckH.csv",sep = ",")

      ## varDfE <- data.frame(matrix(c(rawLabels[1:length(varNamesE)],varNamesE),byrow = F,ncol=2))
      ## write.table(varDf,file = "varCheck.csvE",sep = ",")

   #   varNames <- varNamesH

      varNames <- c(varNamesA,
                    "age",
                    "EdCompleted",
                    "inSchool",
                    "employed",
                    "TimeOutsideHere",
                    "sleepTime",
                    "rCoup",
                    "Coup1",
                    "Coup2",
                    "Coup3",
                    "Interviewer")

    #  varDfE <- data.frame(matrix(c(rawLabels[1:length(varNamesE)],varNamesE),byrow = F,ncol=2)) 
varDf <- data.frame(matrix(c(rawLabels[1:length(varNames)],varNames),byrow = F,ncol=2))
    #  write.table(varDfE,file = "varCheckE.csv",sep = ",")
  (varDf)
      ## varNamesE <- c(varNamesE,
      ##               "age",
      ##               "EdCompleted",
      ##               "inSchool",
      ##               "employed",
      ##               "TimeOutsideHere",
      ##               "sleepTime",
      ##               "Coup1",
      ##               "Coup2",
      ##               "Coup3",
      ##               "Interviewer")

      ## varDfE <- data.frame(matrix(c(rawLabels[1:length(varNamesE)],varNamesE),byrow = F,ncol=2))
      ## write.table(varDfE,file = "varCheckE.csv",sep = ",")

      ## colnames(df1) <- varNamesE
      ## colnames(df2) <- varNamesH

      ## pgmR.E <- df1[,89:104]
      ## pgmR.H <- df2[,89:100]

      ## df1 <- df1[,c(1:88,105:114)]
      ## df2 <- df2[,c(1:88,101:110)]

      ## df1$location="EastNY"
      ## df2$location="Harlem"

      ## df <- rbind(df2,df1)

#+END_SRC

#+RESULTS: sub_out_image_vars
[[file:check_images_set.txt]]

#+name: write_the_file
#+BEGIN_SRC R :file cc.csv :results output :export both :session nyc 
  colnames(df) <- varNames
  write.table(x=df,file="ciyCouncil_all.csv",sep = "\t")
#+END_SRC

#+RESULTS: write_the_file
[[file:cc.csv]]
* Collective efficacy
* Civil trust
** Police Trust
*** code
#+name: police_trust
#+header: :quality 100
#+BEGIN_SRC R :file ct_on_police.jpeg :results graphics :export both :session nyc 
  nR <- nrow(df)
  countOnPolice <- df[,'countOnPolice']
  ctOnPolice=rep(-1,nR)


  ctOnPolice[is.na(countOnPolice)] <- NA
  ctOnPolice[as.numeric(countOnPolice)==1] <- 5
  ctOnPolice[as.numeric(countOnPolice)==2] <- 4            
  ctOnPolice[as.numeric(countOnPolice)==3] <- 3
  ctOnPolice[as.numeric(countOnPolice)==4] <- 1
  ctOnPolice[as.numeric(countOnPolice)==5] <- 2

  ctOnPolice <- factor(ctOnPolice,levels = 1:5,
                       labels = c("Yes-d",
                           "Yes-p",
                           "Unsure",
                           "No-p",
                           "No-d")
                       ,ordered=TRUE)

  #jpeg("resp_marginals/ctOnPol.jpg")
  pcounts <- table(ctOnPolice)
  barplot(pcounts, main="Count On Police",col = "steel blue")

  #dev.off()
#+end_src
*** graph
#+RESULTS: police_trust
[[file:ct_on_police.jpeg]]

** Fire Trust
*** code
#+name: fire_trust
#+header: :quality 100
#+BEGIN_SRC R :file ct_on_fire.jpeg :results graphics :export both :session nyc 

  #fire
  countOnFire <- df[,'countOnFire']
  ctOnFire=rep(-1,nR)
  ctOnFire[is.na(countOnFire)==1] <- NA
  ctOnFire[as.numeric(countOnFire)==1] <- 5
  ctOnFire[as.numeric(countOnFire)==2] <- 4          
  ctOnFire[as.numeric(countOnFire)==3] <- 3
  ctOnFire[as.numeric(countOnFire)==4] <- 1
  ctOnFire[as.numeric(countOnFire)==5] <- 2

  ctOnFire <- factor(ctOnFire,levels = 1:5,
                       labels = c("Yes-d",
                           "Yes-p",
                           "Unsure",
                           "No-p",
                           "No-d")
                       ,ordered=TRUE)

  #jpeg("resp_marginals/ctOnFire.jpg")
  fcounts <- table(ctOnFire)
  barplot(fcounts, main="Count On Fire",col = "steel blue")

  #dev.off()
#+END_SRC
*** graph
#+RESULTS: fire_trust
[[file:ct_on_fire.jpeg]]

** Ambulance Trust
*** code
#+name: ems_trust
#+header: :quality 100
#+BEGIN_SRC R :file ct_on_ems.jpeg :results graphics :export both :session nyc 


#Ambulance
  countOnAmbulance <- df[,'countOnAmbulance']
  ctOnAmbulance=rep(-1,nR)

  ctOnAmbulance[is.na(countOnAmbulance)==1] <- NA
  ctOnAmbulance[as.numeric(countOnAmbulance)==1] <- 5
  ctOnAmbulance[as.numeric(countOnAmbulance)==2] <- 4
  ctOnAmbulance[as.numeric(countOnAmbulance)==3] <- 3
  ctOnAmbulance[as.numeric(countOnAmbulance)==4] <- 1
  ctOnAmbulance[as.numeric(countOnAmbulance)==5] <- 2

  ctOnAmbulance <- factor(ctOnAmbulance,levels = 1:5,
                       labels = c("Yes-d",
                           "Yes-p",
                           "Unsure",
                           "No-p",
                           "No-d")
                       ,ordered=TRUE)

#  jpeg("resp_marginals/ctOnAmbulance.jpg")
  acounts <- table(ctOnAmbulance)
  barplot(acounts, main="Count On Ambulance",col="steel blue")

#  dev.off()
#+END_SRC
*** graph
#+RESULTS: ems_trust
[[file:ct_on_ems.jpeg]]

#+name: pol_trust
#+header: :quality 100
#+BEGIN_SRC R :file ct_on_pol.jpeg :results graphics :export both :session nyc 
** Leaders Trust
*** code
  #Leaders
  countOnLeaders <- df[,'countOnLeaders']
  ctOnLeaders=rep(-1,nR)

  ctOnLeaders[is.na(countOnLeaders)] <- NA
  ctOnLeaders[as.numeric(countOnLeaders)== 1] <- 5
  ctOnLeaders[as.numeric(countOnLeaders)== 2] <- 4            
  ctOnLeaders[as.numeric(countOnLeaders)== 3] <- 3
  ctOnLeaders[as.numeric(countOnLeaders)== 4] <- 1
  ctOnLeaders[as.numeric(countOnLeaders)== 5] <- 2

  ctOnLeaders <- factor(ctOnLeaders,levels = 1:5,
                       labels = c("Yes-d",
                           "Yes-p",
                           "Unsure",
                           "No-p",
                           "No-d")
                       ,ordered=TRUE)

#  jpeg("resp_marginals/ctOnLeaders.jpg")
  lcounts <- table(ctOnLeaders)
  barplot(lcounts, main="Count On Leaders",col= "steel blue")

#  dev.off()

#+END_SRC
*** graph
#+RESULTS: pol_trust
[[file:ct_on_pol.jpeg]]

** Program trust
*** code

#+name: cbo_trust
#+header: :quality 100
#+BEGIN_SRC R :file ct_on_cbo.jpeg :results graphics :export both :session nyc 

#Programs
countOnPrograms <- df[,'countOnPrograms']
ctOnPrograms=rep(-1,nR)


  ctOnPrograms[is.na(countOnPrograms)] <- NA
  ctOnPrograms[as.numeric(countOnPrograms)== 1] <- 5
  ctOnPrograms[as.numeric(countOnPrograms)== 2] <- 4            
  ctOnPrograms[as.numeric(countOnPrograms)== 3] <- 3
  ctOnPrograms[as.numeric(countOnPrograms)== 4] <- 1
  ctOnPrograms[as.numeric(countOnPrograms)== 5] <- 2

  ctOnPrograms <- factor(ctOnPrograms,levels = 1:5,
                       labels = c("Yes-d",
                           "Yes-p",
                           "Unsure",
                           "No-p",
                           "No-d")
                       ,ordered=TRUE)

#  jpeg("resp_marginals/ctOnPrograms.jpg")
  cbocounts <- table(ctOnPrograms)
  barplot(cbocounts, main="Count On Programs",col= "steel blue")

#  dev.off()
#+END_SRC
*** graph
#+RESULTS: cbo_trust
[[file:ct_on_cbo.jpeg]]

** Teacher trust
*** code
#+name: teacher_trust
#+header: :quality 100
#+BEGIN_SRC R :file ct_on_teacher.jpeg :results graphics :export both :session nyc 

#Teachers
countOnTeachers <- df[,'countOnTeachers']
ctOnTeachers=rep(-1,nR)


  ctOnTeachers[is.na(countOnTeachers)] <- NA
  ctOnTeachers[as.numeric(countOnTeachers)== 1] <- 5
  ctOnTeachers[as.numeric(countOnTeachers)== 2] <- 4            
  ctOnTeachers[as.numeric(countOnTeachers)== 3] <- 3
  ctOnTeachers[as.numeric(countOnTeachers)== 4] <- 1
  ctOnTeachers[as.numeric(countOnTeachers)== 5] <- 2

  ctOnTeachers <- factor(ctOnTeachers,levels = 1:5,
                       labels = c("Yes-d",
                           "Yes-p",
                           "Unsure",
                           "No-p",
                           "No-d")
                       ,ordered=TRUE)

#  jpeg("resp_marginals/ctOnTeachers.jpg")
  tcounts <- table(ctOnTeachers)
  barplot(tcounts, main="Count On Teachers",col= "steel blue")

#  dev.off()
#+END_SRC
*** graph
#+RESULTS: teacher_trust
[[file:ct_on_teacher.jpeg]]

** Grouped Trust
*** code
#+name: civil_trust
#+header: :quality 100
#+BEGIN_SRC R :file ct_on_civil.jpeg :results graphics :export both :session nyc 

  institutions <- c("Police",
  "Fire","Ambulance","Leaders","Programs","Teachers")

  ctdata <- matrix(c(pcounts,
                   fcounts,
                   acounts,
                   lcounts,
                   cbocounts,
                   tcounts),byrow=TRUE,nrow=6)
  colnames(ctdata)<-names(pcounts)
  row.names(ctdata)<-institutions
  #pdf("grouped_scenario/civilTrust.pdf")
  #jpeg("grouped_scenario/civilTrust.jpg")
  city_col <- c("darkblue",
                  "red",
                  "steelblue",
                  "yellow",
                  "purple",
                  "green"
                  )

  barplot(ctdata,
          main=paste("Trust in civil institutions"),
          col=city_col,
          beside = TRUE)
  legend(x="top",legend = institutions, fill = city_col,cex = 1.0)

  #dev.off()
#+END_SRC
*** graph
#+RESULTS: civil_trust
[[file:ct_on_civil.jpeg]]

** Report crime to police
* Victimization
** Respondent has been shot at
*** code
#+name: shot_victim
#+header: :quality 100
#+BEGIN_SRC R :file shot_victim.jpeg :results graphics :export both :session nyc 
  nR <- nrow(df)
  EverShotAt <- df[,'EverShotAt']

  EverShotAtA <- table(EverShotAt,useNA = "ifany")
  EverShotAtPct <- round(100*prop.table(EverShotAtA),0)



  #jpeg("resp_marginals/ctOnPol.jpg")

  barplot(EverShotAtPct, main="Percent ever shot at",col = "steel blue")

  #dev.off()
#+end_src
*** graph
#+RESULTS: shot_victim
[[file:shot_victim.jpeg]]
** Respondent has been stabbed
*** code
#+name: stabbed_victim
#+header: :quality 100
#+BEGIN_SRC R :file stabbed_victim.jpeg :results graphics :export both :session nyc 
  nR <- nrow(df)
  EverStabbed <- df[,'EverStabbed']

  EverStabbedA <- table(EverStabbed,useNA = "ifany")
  EverStabbedPct <- round(100*prop.table(EverStabbedA),0)



  #jpeg("resp_marginals/ctOnPol.jpg")

  barplot(EverStabbedPct, main="Percent ever stabbed",col = "steel blue")

  #dev.off()
#+end_src
*** graphs
#+RESULTS: stabbed_victim
[[file:stabbed_victim.jpeg]]
** Number of guns the respondent has seen
*** code
#+name: guns_seen
#+header: :quality 100
#+BEGIN_SRC R :file guns_seen.jpeg :results graphics :export both :session nyc 
  nR <- nrow(df)
  GunsSeenCount <- df[,'GunsSeenCount']

  GunsSeenCount_data <- rep(-1,nR)

  GunsSeenCount_data[is.na(GunsSeenCount)] <- NA
  GunsSeenCount_data[as.numeric(GunsSeenCount)==1] <-1
  GunsSeenCount_data[as.numeric(GunsSeenCount)==2] <-2
  GunsSeenCount_data[as.numeric(GunsSeenCount)==3] <- 11     
  GunsSeenCount_data[as.numeric(GunsSeenCount)==4] <- 3

  GunsSeenCount_data[as.numeric(GunsSeenCount)==5] <- 4
  GunsSeenCount_data[as.numeric(GunsSeenCount)==6] <- 5    
  GunsSeenCount_data[as.numeric(GunsSeenCount)==7] <- 6
  GunsSeenCount_data[as.numeric(GunsSeenCount)==8] <- 7

  GunsSeenCount_data[as.numeric(GunsSeenCount)==9] <- 8
  GunsSeenCount_data[as.numeric(GunsSeenCount)==10] <- 9
  GunsSeenCount_data[as.numeric(GunsSeenCount)==11] <- 10
  GunsSeenCount_data[as.numeric(GunsSeenCount)==12] <- 12        


  GunsSeenCountf <- factor(GunsSeenCount_data,levels = 1:12,
                           labels=c(0:9,"10+","Decline"), ordered=TRUE)


  GunsSeenCountTtl <- table(GunsSeenCountf)
  GunsSeenCountPct <- round(100*prop.table(GunsSeenCountTtl),0)
  #jpeg("resp_marginals/ctOnPol.jpg")

  barplot(GunsSeenCountPct, main="Percent seen gun count",col = "steel blue")

  #dev.off()
#+end_src
*** graph
#+RESULTS: guns_seen
[[file:guns_seen.jpeg]]

** Repondent is aware of recent gun threats
*** code
#+name: threats_heard
#+header: :quality 100
#+BEGIN_SRC R :file threats_heard.jpeg :results graphics :export both :session nyc 
  nR <- nrow(df)
  HeardPersonThreatenedWGunHereL12Count <- df[,'HeardPersonThreatenedWGunHereL12Count']

  HeardPersonThreatenedWGunHereL12Count_data <- rep(-1,nR)

  HeardPersonThreatenedWGunHereL12Count_data[is.na(HeardPersonThreatenedWGunHereL12Count)] <- NA
  HeardPersonThreatenedWGunHereL12Count_data[as.numeric(HeardPersonThreatenedWGunHereL12Count)==1] <-1
  HeardPersonThreatenedWGunHereL12Count_data[as.numeric(HeardPersonThreatenedWGunHereL12Count)==2] <-2
  HeardPersonThreatenedWGunHereL12Count_data[as.numeric(HeardPersonThreatenedWGunHereL12Count)==3] <- 11     
  HeardPersonThreatenedWGunHereL12Count_data[as.numeric(HeardPersonThreatenedWGunHereL12Count)==4] <- 3

  HeardPersonThreatenedWGunHereL12Count_data[as.numeric(HeardPersonThreatenedWGunHereL12Count)==5] <- 4
  HeardPersonThreatenedWGunHereL12Count_data[as.numeric(HeardPersonThreatenedWGunHereL12Count)==6] <- 5    
  HeardPersonThreatenedWGunHereL12Count_data[as.numeric(HeardPersonThreatenedWGunHereL12Count)==7] <- 6
  HeardPersonThreatenedWGunHereL12Count_data[as.numeric(HeardPersonThreatenedWGunHereL12Count)==8] <- 7

  HeardPersonThreatenedWGunHereL12Count_data[as.numeric(HeardPersonThreatenedWGunHereL12Count)==9] <- 8
  HeardPersonThreatenedWGunHereL12Count_data[as.numeric(HeardPersonThreatenedWGunHereL12Count)==10] <- 9
  HeardPersonThreatenedWGunHereL12Count_data[as.numeric(HeardPersonThreatenedWGunHereL12Count)==11] <- 10
  HeardPersonThreatenedWGunHereL12Count_data[as.numeric(HeardPersonThreatenedWGunHereL12Count)==12] <- 12        


  HeardPersonThreatenedWGunHereL12Countf <- factor(HeardPersonThreatenedWGunHereL12Count_data,levels = 1:12,
                           labels=c(0:9,"10+","Decline"), ordered=TRUE)


  HeardPersonThreatenedWGunHereL12CountTtl <- table(HeardPersonThreatenedWGunHereL12Countf)
  HeardPersonThreatenedWGunHereL12CountPct <- round(100*prop.table(HeardPersonThreatenedWGunHereL12CountTtl),0)
  #jpeg("resp_marginals/ctOnPol.jpg")

  barplot(HeardPersonThreatenedWGunHereL12CountPct, main="Percent heard gun threats here in the last 12 months",col = "steel blue")

  #dev.off()
#+end_src

*** graphs
#+Results: threats_heard
[[file:threats_heard.jpeg]]

** Respondent has heard recent gun shots
*** code
#+name: shots_heard
#+header: :quality 100
#+BEGIN_SRC R :file shots_heard.jpeg :results graphics :export both :session nyc 
  nR <- nrow(df)
  HeardGunshotsHereL12Count <- df[,'HeardGunshotsHereL12Count']

  HeardGunshotsHereL12Count_data <- rep(-1,nR)

  HeardGunshotsHereL12Count_data[is.na(HeardGunshotsHereL12Count)] <- NA
  HeardGunshotsHereL12Count_data[as.numeric(HeardGunshotsHereL12Count)==1] <-1
  HeardGunshotsHereL12Count_data[as.numeric(HeardGunshotsHereL12Count)==2] <-2
  HeardGunshotsHereL12Count_data[as.numeric(HeardGunshotsHereL12Count)==3] <- 11     
  HeardGunshotsHereL12Count_data[as.numeric(HeardGunshotsHereL12Count)==4] <- 3

  HeardGunshotsHereL12Count_data[as.numeric(HeardGunshotsHereL12Count)==5] <- 4
  HeardGunshotsHereL12Count_data[as.numeric(HeardGunshotsHereL12Count)==6] <- 5    
  HeardGunshotsHereL12Count_data[as.numeric(HeardGunshotsHereL12Count)==7] <- 6
  HeardGunshotsHereL12Count_data[as.numeric(HeardGunshotsHereL12Count)==8] <- 7

  HeardGunshotsHereL12Count_data[as.numeric(HeardGunshotsHereL12Count)==9] <- 8
  HeardGunshotsHereL12Count_data[as.numeric(HeardGunshotsHereL12Count)==10] <- 9
  HeardGunshotsHereL12Count_data[as.numeric(HeardGunshotsHereL12Count)==11] <- 10
  HeardGunshotsHereL12Count_data[as.numeric(HeardGunshotsHereL12Count)==12] <- 12        


  HeardGunshotsHereL12Countf <- factor(HeardGunshotsHereL12Count_data,levels = 1:12,
                           labels=c(0:9,"10+","Decline"), ordered=TRUE)


  HeardGunshotsHereL12CountTtl <- table(HeardGunshotsHereL12Countf)
  HeardGunshotsHereL12CountPct <- round(100*prop.table(HeardGunshotsHereL12CountTtl),0)
  #jpeg("resp_marginals/ctOnPol.jpg")

  barplot(HeardGunshotsHereL12CountPct, main="Percent heard gun shots here in the last 12 months",col = "steel blue")

  #dev.off()
#+end_src
*** graphs
#+RESULTS: shots_heard
[[file:shots_heard.jpeg]]
    
** Respondent has been recently stopped by police 
*** code
#+name: sqf
#+header: :quality 100
#+BEGIN_SRC R :file sqf.jpeg :results graphics :export both :session nyc 
  nR <- nrow(df)
  SQFCount <- df[,'SQF12mo']

  SQFCount_data <- rep(-1,nR)

  SQFCount_data[is.na(SQFCount)] <- NA
  SQFCount_data[as.numeric(SQFCount)==1] <-1
  SQFCount_data[as.numeric(SQFCount)==2] <-2
  SQFCount_data[as.numeric(SQFCount)==3] <- 11     
  SQFCount_data[as.numeric(SQFCount)==4] <- 3

  SQFCount_data[as.numeric(SQFCount)==5] <- 4
  SQFCount_data[as.numeric(SQFCount)==6] <- 5    
  SQFCount_data[as.numeric(SQFCount)==7] <- 6
  SQFCount_data[as.numeric(SQFCount)==8] <- 7

  SQFCount_data[as.numeric(SQFCount)==9] <- 8
  SQFCount_data[as.numeric(SQFCount)==10] <- 9
  SQFCount_data[as.numeric(SQFCount)==11] <- 10
  SQFCount_data[as.numeric(SQFCount)==12] <- 12        


  SQFCountf <- factor(SQFCount_data,levels = 1:12,
                           labels=c(0:9,"10+","Dec"), ordered=TRUE)


  SQFCountTtl <- table(SQFCountf)
  SQFCountPct <- round(100*prop.table(SQFCountTtl),0)
  #jpeg("resp_marginals/ctOnPol.jpg")

  barplot(SQFCountPct, main="Percent subject to Stop, Question and Frisk last 12 months",col = "steel blue")

  #dev.off()
#+end_src

*** graphs
#+Results: sqf
[[file:sqf.jpeg]]

** Respondent's estimate of age at death
*** code
#+name: ageAtDeath
#+header: :quality 100
#+BEGIN_SRC R :file ageAtDeath.jpeg :results graphics :export both :session nyc 
    ageAtDeath <- df$AgeAtDeath
    ageAtDeaths <- levels(ageAtDeath)[as.numeric(ageAtDeath)]
    ageAtDeaths <- gsub(" ", "",ageAtDeaths)
    ageAtDeaths[ageAtDeaths==""] <- NA

    ageAtDeathN <- as.numeric(ageAtDeaths)
  hist(ageAtDeathN[!is.na(ageAtDeathN)],freq=FALSE,
       xlab="Age at Death",main="Histogram of Respondent Age At Death")

#+End_src

#+name: ageAtDeathLT35
#+header: :quality 100
#+BEGIN_SRC R :file ageAtDeathLT35.jpeg :results graphics :export both :session nyc 
  ageAtDeathLT35 <- ageAtDeathN
  ageAtDeathLT35[ageAtDeathN<=35] <- "Dead@35"
  ageAtDeathLT35[ageAtDeathN>35] <- "NotDead@35"


  ageAtDeathLT35Ttl <- table(ageAtDeathLT35)
  ageAtDeathLT35Pct <- round(100*prop.table(ageAtDeathLT35Ttl),0)
  #jpeg("resp_marginals/ctOnPol.jpg")

  barplot(ageAtDeathLT35Pct, main="Percent who expect to be dead at 35",col = "steel blue")
#+End_src
*** graphs
#+RESULTS: ageAtDeathLT35
[[file:ageAtDeathLT35.jpeg]]

#+RESULTS: ageAtDeath
[[file:ageAtDeath.jpeg]]
** Respondent's estimate of Referrer's estimate of age at death
*** code

#+name: FAgeAtDeath
#+header: :quality 100
#+BEGIN_SRC R :file FAgeAtDeath.jpeg :results graphics :export both :session nyc 
    FAgeAtDeath <- df$FAgeAtDeath
    FAgeAtDeaths <- levels(FAgeAtDeath)[as.numeric(FAgeAtDeath)]
    FAgeAtDeaths <- gsub(" ", "",FAgeAtDeaths)
    FAgeAtDeaths[FAgeAtDeaths==""] <- NA

    FAgeAtDeathN <- as.numeric(FAgeAtDeaths)
  hist(FAgeAtDeathN[!is.na(FAgeAtDeathN)],freq=FALSE,
       xlab="Age at Death",main="Respondent's esitmate of Refferer's Age At Death")

#+End_src

#+name: FAgeAtDeathLT35
#+header: :quality 100
#+BEGIN_SRC R :file FAgeAtDeathLT35.jpeg :results graphics :export both :session nyc 
  FAgeAtDeathLT35 <- FAgeAtDeathN
  FAgeAtDeathLT35[FAgeAtDeathN<=35] <- "Dead@35"
  FAgeAtDeathLT35[FAgeAtDeathN>35] <- "NotDead@35"


  FAgeAtDeathLT35Ttl <- table(FAgeAtDeathLT35)
  FAgeAtDeathLT35Pct <- round(100*prop.table(FAgeAtDeathLT35Ttl),0)
  #jpeg("resp_marginals/ctOnPol.jpg")

  barplot(FAgeAtDeathLT35Pct, main="Percent who expect their refferer to be dead at 35",col = "steel blue")
#+End_src

*** graphs
* Safety
** Respondent thinks gangs are common
*** code
#+name: gang_common
#+header: :quality 100
#+BEGIN_SRC R :file gang_common.jpeg :results graphics :export both :session nyc 
  nR <- nrow(df)
  GangCommon <- df[,'GangCommon']
  GangCommon_data=rep(-1,nR)

  GangCommon_data[is.na(GangCommon)] <- NA
  GangCommon_data[as.numeric(GangCommon)==1] <- 5
  GangCommon_data[as.numeric(GangCommon)==2] <- 4            
  GangCommon_data[as.numeric(GangCommon)==3] <- 3
  GangCommon_data[as.numeric(GangCommon)==4] <- 1
  GangCommon_data[as.numeric(GangCommon)==5] <- 2

  GangCommon_data <- factor(GangCommon_data,levels = 1:5,
                       labels = c("Yes-d",
                           "Yes-p",
                           "Unsure",
                           "No-p",
                           "No-d")
                       ,ordered=TRUE)

  #jpeg("resp_marginals/ctOnPol.jpg")
  gcounts <- table(GangCommon_data)

  GangCommonPct <- round(100*prop.table(gcounts),0)
  #jpeg("resp_marginals/ctOnPol.jpg")

  barplot(GangCommonPct, main="Percent who say gangs are common",col = "steel blue")
#+End_src
*** graph
#+RESULTS: gang_common
[[file:gang_common.jpeg]]

** Respondent feels safe during the day
*** code
#+name: resp_safe_day
#+header: :quality 100
#+BEGIN_SRC R :file resp_safe_day.jpeg :results graphics :export both :session nyc 
  nR <- nrow(df)
  RFeelSafeDay <- df[,'RFeelSafeDay']
  RFeelSafeDay_data=rep(-1,nR)

  RFeelSafeDay_data[is.na(RFeelSafeDay)] <- NA
  RFeelSafeDay_data[as.numeric(RFeelSafeDay)==1] <- 5
  RFeelSafeDay_data[as.numeric(RFeelSafeDay)==2] <- 4            
  RFeelSafeDay_data[as.numeric(RFeelSafeDay)==3] <- 3
  RFeelSafeDay_data[as.numeric(RFeelSafeDay)==4] <- 1
  RFeelSafeDay_data[as.numeric(RFeelSafeDay)==5] <- 2

  RFeelSafeDay_data <- factor(RFeelSafeDay_data,levels = 1:5,
                       labels = c("Yes-d",
                           "Yes-p",
                           "Unsure",
                           "No-p",
                           "No-d")
                       ,ordered=TRUE)

  #jpeg("resp_marginals/ctOnPol.jpg")
  fsdcounts <- table(RFeelSafeDay_data)

  RFeelSafeDayPct <- round(100*prop.table(fsdcounts),0)
  #jpeg("resp_marginals/ctOnPol.jpg")

  barplot(RFeelSafeDayPct, main="Percent who feel safe (day)",col = "steel blue")
#+End_src
*** graph
#+RESULTS: resp_safe_day
[[file:resp_safe_day.jpeg]]

** Respondent feels safe at night
*** code
#+name: resp_safe_night
#+header: :quality 100
#+BEGIN_SRC R :file resp_safe_night.jpeg :results graphics :export both :session nyc 
  nR <- nrow(df)
  RFeelSafeNight <- df[,'RFeelSafeNight']
  RFeelSafeNight_data=rep(-1,nR)

  RFeelSafeNight_data[is.na(RFeelSafeNight)] <- NA
  RFeelSafeNight_data[as.numeric(RFeelSafeNight)==1] <- 5
  RFeelSafeNight_data[as.numeric(RFeelSafeNight)==2] <- 4            
  RFeelSafeNight_data[as.numeric(RFeelSafeNight)==3] <- 3
  RFeelSafeNight_data[as.numeric(RFeelSafeNight)==4] <- 1
  RFeelSafeNight_data[as.numeric(RFeelSafeNight)==5] <- 2

  RFeelSafeNight_data <- factor(RFeelSafeNight_data,levels = 1:5,
                       labels = c("Yes-d",
                           "Yes-p",
                           "Unsure",
                           "No-p",
                           "No-d")
                       ,ordered=TRUE)

  #jpeg("resp_marginals/ctOnPol.jpg")
  fsncounts <- table(RFeelSafeNight_data)

  RFeelSafeNightPct <- round(100*prop.table(fsncounts),0)
  #jpeg("resp_marginals/ctOnPol.jpg")

  barplot(RFeelSafeNightPct, main="Percent who feel safe (night)",col = "steel blue")
#+End_src
*** graph
#+RESULTS: resp_safe_night
[[file:resp_safe_night.jpeg]]

** Respondent thinks friend feels safe during the day
*** code
#+name: friend_safe_day
#+header: :quality 100
#+BEGIN_SRC R :file friend_safe_day.jpeg :results graphics :export both :session nyc 
  nR <- nrow(df)
  FFeelSafeDay <- df[,'FFeelSafeDay']
  FFeelSafeDay_data=rep(-1,nR)

  FFeelSafeDay_data[is.na(FFeelSafeDay)] <- NA
  FFeelSafeDay_data[as.numeric(FFeelSafeDay)==1] <- 5
  FFeelSafeDay_data[as.numeric(FFeelSafeDay)==2] <- 4            
  FFeelSafeDay_data[as.numeric(FFeelSafeDay)==3] <- 3
  FFeelSafeDay_data[as.numeric(FFeelSafeDay)==4] <- 1
  FFeelSafeDay_data[as.numeric(FFeelSafeDay)==5] <- 2

  FFeelSafeDay_data <- factor(FFeelSafeDay_data,levels = 1:5,
                       labels = c("Yes-d",
                           "Yes-p",
                           "Unsure",
                           "No-p",
                           "No-d")
                       ,ordered=TRUE)

  #jpeg("resp_marginals/ctOnPol.jpg")
  ffsdcounts <- table(FFeelSafeDay_data)

  FFeelSafeDayPct <- round(100*prop.table(ffsdcounts),0)
  #jpeg("resp_marginals/ctOnPol.jpg")

  barplot(FFeelSafeDayPct, main="Percent who think their Friend feels safe (day)",col = "steel blue")
#+End_src
*** graph
#+RESULTS: friend_safe_day
    [[file:friend_safe_day.jpeg]]
** Respondent thinks friend feels safe at night
*** code
#+name: friend_safe_night
#+header: :quality 100
#+BEGIN_SRC R :file friend_safe_night.jpeg :results graphics :export both :session nyc 
  nR <- nrow(df)
  FFeelSafeNight <- df[,'FFeelSafeNight']
  FFeelSafeNight_data=rep(-1,nR)

  FFeelSafeNight_data[is.na(FFeelSafeNight)] <- NA
  FFeelSafeNight_data[as.numeric(FFeelSafeNight)==1] <- 5
  FFeelSafeNight_data[as.numeric(FFeelSafeNight)==2] <- 4            
  FFeelSafeNight_data[as.numeric(FFeelSafeNight)==3] <- 3
  FFeelSafeNight_data[as.numeric(FFeelSafeNight)==4] <- 1
  FFeelSafeNight_data[as.numeric(FFeelSafeNight)==5] <- 2

  FFeelSafeNight_data <- factor(FFeelSafeNight_data,levels = 1:5,
                       labels = c("Yes-d",
                           "Yes-p",
                           "Unsure",
                           "No-p",
                           "No-d")
                       ,ordered=TRUE)

  #jpeg("resp_marginals/ctOnPol.jpg")
  ffsncounts <- table(FFeelSafeNight_data)

  FFeelSafeNightPct <- round(100*prop.table(ffsncounts),0)
  #jpeg("resp_marginals/ctOnPol.jpg")

  barplot(FFeelSafeNightPct, main="Percent who think their Friend feels safe (night)",col = "steel blue")
#+End_src
*** graph
#+RESULTS: friend_safe_night
[[file:friend_safe_night.jpeg]]

** Grouped safety
*** code
#+name: safety_group
#+header: :quality 100
#+BEGIN_SRC R :file safety_group.jpeg :results graphics :export both :session nyc 

    safety_components <- c(
    "Resp Feels Safe (day)","Resp Feels Safe (night)",
  "Friend Feels Safe (day)","Friend Feels Safe (night)",
"gang prevelance")

    ctdata <- matrix(c(fsdcounts,
                     fsncounts,
                     ffsdcounts,
                     ffsncounts,
                     gcounts),byrow=TRUE,nrow=5)
    colnames(ctdata)<-names(fsdcounts)
    row.names(ctdata)<-safety_components
    #pdf("grouped_scenario/civilTrust.pdf")
    #jpeg("grouped_scenario/civilTrust.jpg")
    city_col <- c("darkblue",
                    "red",
                    "steelblue",
                    "yellow",
                    "purple"                    )

  ctdataPct <- round(100*prop.table(as.table(ctdata),1),0)
    barplot(ctdataPct,
            main=paste("Construct of safety"),
            col=city_col,
            beside = TRUE)
    legend(x="top",legend = safety_components, fill = city_col,cex = 1.0)

    #dev.off()
#+END_SRC

#+RESULTS: safety_group
[[file:safety_group.jpeg]]

* Social Media
** Social media used
** Respondent is aware of people of being threatened on Facebook
** Respondent is aware of people of being threatened on Twitter
** Respondent is aware of people of being threatened on Instagram
** Respondent is aware of people of being threatened on Snapchat
** Respondent is aware of people of being threatened on Youtube
** Respondent is aware of people of being threatened on Vine
** Respondent is aware of people of being threatened on other social media
* Program awareness
** Anti-violence images
*** Respondent has seen image
** Outreach
*** Respondent knows employees
** Communication
*** Respondent communicated with emplyees recently
* Demographics
** Respondent age
** Respondent education completed
** Respondent is in school
** Respondent employment
** Respondent mobility
** Respondent sleep time
** create location variable
#+name: create_location_variable
#+BEGIN_SRC R :file locatationf.csv :results output org :export both :session nyc 
  library(ascii)
  DateCollectedShStr <- substr(x=DateCollectedStr,start = 1,stop = 10)
  DateCollectedd <- as.Date(DateCollectedShStr)
  location_data <- rep(-1,length(DateCollectedShStr))

  location_data[DateCollectedd >= as.Date("2014-03-14") & DateCollectedd <= as.Date("2014-03-27")] <- 1
  location_data[DateCollectedd >= as.Date("2014-04-02") & DateCollectedd <= as.Date("2014-04-12")] <- 2
  location_data[DateCollectedd >= as.Date("2014-04-25") & DateCollectedd <= as.Date("2014-05-07")] <- 3
  location_data[DateCollectedd >= as.Date("2014-05-27") & DateCollectedd <= as.Date("2014-06-04")] <- 4

  location <- factor(location_data,levels = 1:4,labels = c("Harlem","EastNY","SJamaica","SBronx"))
  t1 <- "Respondent Neighborhood"
  b <- ascii(table(location),header=T,include.colnames=T,caption=t1)
  print(b,type="org")
#+end_src

#+results: create_location_variable

* Network
** Respondent coupon
** Respondent referrals
** Interviewer
** Time in interview
* Catchment violence indicies

* Research Questions
** Describe Sample, Age, Gender, Education, Employment
** Is victimization associated with higher violent ideation?
** Is employment associated with lower violent ideation?
** Is age associated with violent ideation?
** Is lower civil trust associated with violent ideation?
** Is lower collective efficacy associated with violent ideation?
** Are perceptions of safety associated with lower violent ideation?
** Are perceptions of gang prevelance associated with higher violent ideation?
** Is a low age at death, associated with higher violent ideation?
** How much of the variation in violent ideation can we explain?

** RDS homophily on violence

* Nice Pedestrian overview
* Move them to factors and construct
